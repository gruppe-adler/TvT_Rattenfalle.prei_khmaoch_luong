#include "grad_deathCam\rscDefines.hpp"
#include "grad_deathCam\rscDialogs.hpp"
#include "grad_pilotTracking\rscDefines.hpp"
#include "node_modules\grad-replay\ui\defines.hpp"
#include "node_modules\grad-replay\ui\dialog.hpp"
#include "node_modules\grad-leaveNotes\grad_leaveNotes.hpp"

OnLoadMission = "TvT_Rattrap";
author = "Nomisum f√ºr Gruppe Adler";  //appears as author in overview and loading screen
overviewText = "Wettrennen um verschollene Piloten."; //appears in overview and loading screen
onLoadName = "TvT_Rattrap"; //mission name for loading screen only
enableDebugConsole = 1;
loadScreen = "pic\loading_pic.jpg";

respawn = 3;
respawnDelay = 9999;
respawnTemplates[] = {"Base"};
respawnOnStart = -1;//Dont respawn on start.
respawnDialog = 0;
respawnButton = 0;

class cfgFunctions {
    #include "grad_deathCam\cfgFunctions.hpp"
    #include "rattrap_objectives\cfgFunctions.hpp"
    #include "grad_simpleVehicleRespawn\cfgFunctions.hpp"
    #include "grad_simpleWaveRespawn\cfgFunctions.hpp"
    #include "grad_fx\cfgFunctions.hpp"
    #include "grad_pilotTracking\cfgFunctions.hpp"
    #include "grad_pilotCam\cfgFunctions.hpp"
    #include "mission_helpers\cfgFunctions.hpp"
    #include "grad_antiAirArea\cfgFunctions.hpp"

    #include "node_modules\grad-leaveNotes\cfgFunctions.hpp"
    #include "node_modules\grad-loadout\cfgFunctions.hpp"
    #include "node_modules\grad-gpsTracker\cfgFunctions.hpp"
    #include "node_modules\grad-makeFire\cfgFunctions.hpp"
    #include "node_modules\grad-replay\cfgFunctions.hpp"

};

class rscTitles {
    #include "grad_pilotTracking\rscTitles.hpp"
    #include "grad_pilotCam\rscpip\title.hpp"
};

class Loadouts {
    baseDelay = 1;      // base delay in seconds before applying loadouts on mission start
    handleRadios = 1;   // radios are handled by grad-loadout
    resetLoadout = 1;   // start with empty loadouts instead of modifying existing loadout

  class Faction {
        #include "node_modules\grad-factions\loadouts.hpp"
    };
};


class Header
{
  gameType = Seize;
  minPlayers = 3;
  maxPlayers = 35;
};

class Params
{
  class RespawnLoopTime
  {
    title = "Time interval after which respawn for both side is triggered.";
    values[] = {60,120,180,300,420,600};
    texts[] = {"60s", "120s", "3min", "5min", "7min", "10min"};
    default = 420;
  };

  class RespawnCountMax
  {
    title = "Maximum of available respawns for each player.";
    values[] = {0,1,2,3,4,5,99999};
    texts[] = {"zero", "1", "2", "3", "4", "5", "unlimited"};
    default = 3;
  };

  class RespawnPenaltyPilot
  {
    title = "Respawn penalty delay the pilot faces after dying. Will respawn on opposite killer side.";
    values[] = {60, 5*60,10*60,20*60,30*60,45*60,99999};
    texts[] = {"1min", "5min", "10min", "20min", "30min", "45min", "unlimited"};
    default = 20*60;
  };

  class PilotLifeSpan
  {
    title = "Pilot Life Span when not healed";
    values[] = {60,120,300,1800,2700,3600,4500,5400,7200};
    texts[] = {"60s", "120s", "5min", "30min", "45min", "60min", "75min", "90min", "120min"};
    default = 4500;
  };

  class PilotHealingTime
  {
    title = "Duration of uninterrupted healing for pilot to heal.";
    values[] = {60,120,180,300,420,600};
    texts[] = {"60s", "120s", "3min", "5min", "7min", "10min"};
    default = 120;
  };

  class PilotRecordingTime
  {
    title = "Duration of uninterrupted filming to win.";
    values[] = {60,120,180,300,420,600,900,1200};
    texts[] = {"60s", "120s", "3min", "5min", "7min", "10min", "15min", "20min"};
    default = 300;
  };

  class debugMode
  {
    title = "Debug Mode";
    values[] = {0,1};
    texts[] = {"Off", "On"};
    default = 0;
  };
};

class ACE_Settings {
    class ace_map_BFT_Interval {
    value = 1;
    typeName = "SCALAR";
	};
class ace_map_BFT_Enabled {
    value = 0;
    typeName = "BOOL";
	};
class ace_map_BFT_HideAiGroups {
    value = 0;
    typeName = "BOOL";
	};
};

class CfgSounds {
  sounds[] = {};
  #include "node_modules\grad-leaveNotes\cfgSounds.hpp"
  #include "grad_pilotTracking\cfgSounds.hpp"
};

class CfgDebriefing
{
  class OpforWinsByFilming
  {
    title = "Opfor wins";
    subtitle = "by filming the pilot";
    description = "Blufor could not rescue their guy.";
    picture = "pic\gruppe-adler.paa";
  };

  class BluforWinsByFilming
  {
    title = "Blufor wins";
    subtitle = "by filming the pilot";
    description = "Opfor could not get their hands on the pilot.";
    picture = "pic\gruppe-adler.paa";
  };
};
