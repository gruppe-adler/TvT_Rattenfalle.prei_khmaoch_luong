{
  "_args": [
    [
      {
        "raw": "grad-replay@github:gruppe-adler/grad-replay#master",
        "scope": null,
        "escapedName": "grad-replay",
        "name": "grad-replay",
        "rawSpec": "github:gruppe-adler/grad-replay#master",
        "spec": "github:gruppe-adler/grad-replay#master",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:gruppe-adler/grad-replay.git#master",
          "sshUrl": "git+ssh://git@github.com/gruppe-adler/grad-replay.git#master",
          "httpsUrl": "git+https://github.com/gruppe-adler/grad-replay.git#master",
          "gitUrl": "git://github.com/gruppe-adler/grad-replay.git#master",
          "shortcut": "github:gruppe-adler/grad-replay#master",
          "directUrl": "https://raw.githubusercontent.com/gruppe-adler/grad-replay/master/package.json"
        }
      },
      "/Users/simon.schmidt/Documents/GitHub/TvT_Rattenfalle.prei_khmaoch_luong"
    ]
  ],
  "_from": "gruppe-adler/grad-replay#master",
  "_id": "grad-replay@0.0.17",
  "_inCache": true,
  "_location": "/grad-replay",
  "_phantomChildren": {},
  "_requested": {
    "raw": "grad-replay@github:gruppe-adler/grad-replay#master",
    "scope": null,
    "escapedName": "grad-replay",
    "name": "grad-replay",
    "rawSpec": "github:gruppe-adler/grad-replay#master",
    "spec": "github:gruppe-adler/grad-replay#master",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:gruppe-adler/grad-replay.git#master",
      "sshUrl": "git+ssh://git@github.com/gruppe-adler/grad-replay.git#master",
      "httpsUrl": "git+https://github.com/gruppe-adler/grad-replay.git#master",
      "gitUrl": "git://github.com/gruppe-adler/grad-replay.git#master",
      "shortcut": "github:gruppe-adler/grad-replay#master",
      "directUrl": "https://raw.githubusercontent.com/gruppe-adler/grad-replay/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/gruppe-adler/grad-replay.git#93632904422927183b2f3c1f32dcc8fb01d5b08c",
  "_shasum": "de3ab9c3bdb5b0e1d489a385bfb0d3909010ca9b",
  "_shrinkwrap": null,
  "_spec": "grad-replay@github:gruppe-adler/grad-replay#master",
  "_where": "/Users/simon.schmidt/Documents/GitHub/TvT_Rattenfalle.prei_khmaoch_luong",
  "dependencies": {},
  "description": "Arma3 mission replay script",
  "devDependencies": {},
  "gitHead": "93632904422927183b2f3c1f32dcc8fb01d5b08c",
  "name": "grad-replay",
  "optionalDependencies": {},
  "readme": "# grad-replay\nARMA3 mission replay script (working but wip)\n* Records player and AI movement and replays at end of mission.\n* Meant for PvP but pimped to support AI as well\n* Mission duration should be matched to replay precision (see below) - the longer the mission, the less precision is recommended. Better precision (smaller values) results in longer loading times.\n\n### Required Mods\nCBA, ACE3\n\n# How to install\n### 1. Download Release\n### 2. extract GRAD_replay folder into [mission folder]/node_modules\n### 3. Add the following to the description.ext\n\n```\n#include \"node_modules\\grad-replay\\ui\\defines.hpp\"\n#include \"node_modules\\grad-replay\\ui\\dialog.hpp\"\n```\n\n```\n// if CfgFunctions already exists, just put the #include part inside\nclass CfgFunctions {\n  #include \"node_modules\\grad-replay\\cfgFunctions.hpp\"\n };\n```\n### 4. Initialize script in init.sqf\n`[2] call GRAD_replay_fnc_init; // number is precision of replay, 2 means every 2 seconds one snapshot`\n\n### 5. Put this where you want the replay to start (recommended: end of mission)\nMust be executed on server only!\n```\n// stops record, sends data and starts replay\ncall GRAD_replay_fnc_stopRecord; \n\n// ends mission after replay is over\n[{\n\tREPLAY_FINISHED\n}, {\n   [\"END1\"] remoteExec [\"endMission\",0,false]; // your custom end mission call or whatever you want to do after replay\n}, []] call CBA_fnc_waitUntilAndExecute;\n```\n\n### Important\nCurrently there is **no helper function to resume normal gameplay after replay has played**, this means all assets will be frozen and TFAR spectator channel will be set for all players, furthermore every wound will be healed and all spectator cams left.\n\n### Customization\nchange variables in functions/server/fn_init.sqf\n\n* `GRAD_REPLAY_SIDES` sides tracked\n* `GRAD_REPLAY_AI_VEHICLES_TRACKED` if ai vehicles are tracked\n* `GRAD_REPLAY_AI_ONFOOT_TRACKED` if ai on foot is tracked\n* `REPLAY_STEPS_PER_TICK` steps played back at once\n\n### Script commands\nto pause recording, set `GRAD_REPLAY_RECORDING_PAUSED` to true on server / false to resume\n",
  "readmeFilename": "README.md",
  "version": "0.0.17"
}
